/*
=============================================================
Create Database
=============================================================

Objective:
    - Initialize Database
    - Create Tables
    - Import Data
*/

-- Create Database --
CREATE DATABASE ecommerce_sales_db;
USE ecommerce_sales_db;


-- Create Table --
CREATE TABLE sales (
    product_id INT,
    product_name VARCHAR(255),
    category VARCHAR(255),
    price FLOAT,
    review_score DECIMAL(2,1), 
    review_count INT,
    sales_month_1 INT,
    sales_month_2 INT,
    sales_month_3 INT,
    sales_month_4 INT,
    sales_month_5 INT,
    sales_month_6 INT,
    sales_month_7 INT,
    sales_month_8 INT,
    sales_month_9 INT,
    sales_month_10 INT,
    sales_month_11 INT,
    sales_month_12 INT
);

-- Loaded Data into table via MySQL Workbench Import Wizard --

/*
=============================================================
Sales & Revenue Analysis
=============================================================

Objective:
    - Identify the product with the highest total sales accross all 12 months
    - Calculate the total annual revenue generated by each product
    - Determine which product category generates the highest total sales revenue
    - Compute the average monthly sales for each product
    - Analyze total monthly sales by category to observe trends and performance over time
*/


-- Product with the highest total sales accross all 12 months: Product_224 with a total sale of 9,151
SELECT 
	product_name AS best_selling_product,
    (
		COALESCE(sales_month_1, 0) +
        COALESCE(sales_month_2, 0) +
        COALESCE(sales_month_3, 0) +
        COALESCE(sales_month_4, 0) +
        COALESCE(sales_month_5, 0) +
        COALESCE(sales_month_6, 0) +
        COALESCE(sales_month_7, 0) +
        COALESCE(sales_month_8, 0) +
        COALESCE(sales_month_9, 0) +
        COALESCE(sales_month_10, 0) +
        COALESCE(sales_month_11, 0) +
        COALESCE(sales_month_12, 0) 
	) AS total_sales
FROM sales
ORDER BY total_sales DESC
LIMIT 1;


-- Total annual revenue generated by each product (sorted from most to least, rounded by 2)
SELECT 
	DISTINCT(product_name),
    price,
    (
		COALESCE(sales_month_1, 0) +
        COALESCE(sales_month_2, 0) +
        COALESCE(sales_month_3, 0) +
        COALESCE(sales_month_4, 0) +
        COALESCE(sales_month_5, 0) +
        COALESCE(sales_month_6, 0) +
        COALESCE(sales_month_7, 0) +
        COALESCE(sales_month_8, 0) +
        COALESCE(sales_month_9, 0) +
        COALESCE(sales_month_10, 0) +
        COALESCE(sales_month_11, 0) +
        COALESCE(sales_month_12, 0) 
	) AS total_sales,
    ROUND( price * (
		COALESCE(sales_month_1, 0) +
        COALESCE(sales_month_2, 0) +
        COALESCE(sales_month_3, 0) +
        COALESCE(sales_month_4, 0) +
        COALESCE(sales_month_5, 0) +
        COALESCE(sales_month_6, 0) +
        COALESCE(sales_month_7, 0) +
        COALESCE(sales_month_8, 0) +
        COALESCE(sales_month_9, 0) +
        COALESCE(sales_month_10, 0) +
        COALESCE(sales_month_11, 0) +
        COALESCE(sales_month_12, 0)
	), 2) AS revenue
FROM sales
ORDER BY revenue DESC;


-- Product category with the highest total sales revenue
SELECT 
    category,
    MAX(price) AS price,  
    ROUND(
        MAX(price) * (
            COALESCE(SUM(sales_month_1), 0) +
            COALESCE(SUM(sales_month_2), 0) +
            COALESCE(SUM(sales_month_3), 0) +
            COALESCE(SUM(sales_month_4), 0) +
            COALESCE(SUM(sales_month_5), 0) +
            COALESCE(SUM(sales_month_6), 0) +
            COALESCE(SUM(sales_month_7), 0) +
            COALESCE(SUM(sales_month_8), 0) +
            COALESCE(SUM(sales_month_9), 0) +
            COALESCE(SUM(sales_month_10), 0) +
            COALESCE(SUM(sales_month_11), 0) +
            COALESCE(SUM(sales_month_12), 0)
        ), 2
    ) AS revenue
FROM sales
GROUP BY category
ORDER BY revenue DESC;


-- Compute the average monthly sales for each product (sorted from highest to lowest)
SELECT
	product_name,
    (
		COALESCE(AVG(sales_month_1), 0) +
        COALESCE(AVG(sales_month_2), 0) +
        COALESCE(AVG(sales_month_3), 0) +
        COALESCE(AVG(sales_month_4), 0) +
        COALESCE(AVG(sales_month_5), 0) +
        COALESCE(AVG(sales_month_6), 0) +
        COALESCE(AVG(sales_month_7), 0) +
        COALESCE(AVG(sales_month_8), 0) +
        COALESCE(AVG(sales_month_9), 0) +
        COALESCE(AVG(sales_month_10), 0) +
        COALESCE(AVG(sales_month_11), 0) +
        COALESCE(AVG(sales_month_12), 0)
	) AS total_avg_sales
FROM sales
GROUP BY product_name
ORDER BY total_avg_sales DESC;
    

SELECT * FROM sales;
-- Total monthly sales by category



-- [ISSUE] Query 1 and 4 is showing the same output 
-- Product with the highest total sales accross all 12 months: Product_224 with a total sale of 9,151
-- Compute the average monthly sales for each product (sorted from highest to lowest)



/*
=============================================================
Product Performance & Reviews
=============================================================

Objective:
    - Identify the product with the highest average review score
    - Analyze the correlation between reveiw score and total sales
    - Determine which products have a reveiw score of below 3.0 but still exhibit high sales
    - Calculate the average reveiw count for each product category
    - Identify the product with the highest review count but lowest sales
*/


/*
=============================================================
Price & Sales Relationship
=============================================================

Objective:
    - Assess whether higher-priced products generate higher total revenue
    - Calculate the average price of products within each category
    - Identify which category has the most products priced abouve $300
    - Determine the total sales revenue for products priced below $100
*/


/*
=============================================================
Monthly Sales Trends
=============================================================

Objective:
    - Identify the month with the highest total sales across all products
    - Determine which product showed the biggest increase in sales from month 1 to month 12
    - Analyze which product category experiences the most seasonal variation in sales throughout the year
    - Calculate the average sales per month for each product category
*/


/*
=============================================================
Advanced Insights and Multi-Factor Analysis
=============================================================

Objective:
    - Identify the top 3 products by total sales wihin each product category
    - Find products with a review score above 4.0 and sales greater than 500 in at least 6 months
    - Calculate the revenue generated by each product in the month with the lowest sales
    - Identify products where sales in month 12 are at least 20% higher than sales in month 1
    - Calculate the average monthly sales for products with review counts greater than 500
*/